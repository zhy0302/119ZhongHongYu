1.provider相当于最顶层的组件，他接收store作为props，传给组件上的connect，通过mapStateToProps方法
拿到store传来的state，通过dispatch出一个action（type和text）对象后，自动调用reducer，然后reducer
收到后，通过switch判断对应函数的type和text，然后进行处理，返回一个newstate，store接收到newstate，
对页面进行渲染。为了降低代码复杂性，建立中间件，当发起action时，他会对action中type，url，params进行判断，
通过then和catch分别对成功和失败做处理，成功就返回value值，失败就给出错误信息。

2.由于后期会有更多层次嵌套，需要用数据扁平化处理，数据扁平化将数据分为实体entities和主键result两部分，
通过schemas是对实体进行定义规则，并且主键result以数组形式存储在reducer中，通过entities对实体进行集
中处理，最后通过对主键result进行map遍历渲染页面。



3.组件的自治和复用，可以重复使用和多个地方用，不用考虑组件的样式和如何渲染，只需传入显示所需要的数据
和必要的处理函数

4.{...state}是一个对象，将剩余参数展开

5.transform
transform属性应用2D或3D转换，允许旋转，缩放，移动和倾斜